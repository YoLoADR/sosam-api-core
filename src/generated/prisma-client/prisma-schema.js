module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.10). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateCancelReason {
  count: Int!
}

type AggregateCarType {
  count: Int!
}

type AggregateOffer {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type CancelReason {
  id: ID!
  value: String!
  label: String!
}

type CancelReasonConnection {
  pageInfo: PageInfo!
  edges: [CancelReasonEdge]!
  aggregate: AggregateCancelReason!
}

input CancelReasonCreateInput {
  id: ID
  value: String!
  label: String!
}

type CancelReasonEdge {
  node: CancelReason!
  cursor: String!
}

enum CancelReasonOrderByInput {
  id_ASC
  id_DESC
  value_ASC
  value_DESC
  label_ASC
  label_DESC
}

type CancelReasonPreviousValues {
  id: ID!
  value: String!
  label: String!
}

type CancelReasonSubscriptionPayload {
  mutation: MutationType!
  node: CancelReason
  updatedFields: [String!]
  previousValues: CancelReasonPreviousValues
}

input CancelReasonSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CancelReasonWhereInput
  AND: [CancelReasonSubscriptionWhereInput!]
  OR: [CancelReasonSubscriptionWhereInput!]
  NOT: [CancelReasonSubscriptionWhereInput!]
}

input CancelReasonUpdateInput {
  value: String
  label: String
}

input CancelReasonUpdateManyMutationInput {
  value: String
  label: String
}

input CancelReasonWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  value: String
  value_not: String
  value_in: [String!]
  value_not_in: [String!]
  value_lt: String
  value_lte: String
  value_gt: String
  value_gte: String
  value_contains: String
  value_not_contains: String
  value_starts_with: String
  value_not_starts_with: String
  value_ends_with: String
  value_not_ends_with: String
  label: String
  label_not: String
  label_in: [String!]
  label_not_in: [String!]
  label_lt: String
  label_lte: String
  label_gt: String
  label_gte: String
  label_contains: String
  label_not_contains: String
  label_starts_with: String
  label_not_starts_with: String
  label_ends_with: String
  label_not_ends_with: String
  AND: [CancelReasonWhereInput!]
  OR: [CancelReasonWhereInput!]
  NOT: [CancelReasonWhereInput!]
}

input CancelReasonWhereUniqueInput {
  id: ID
}

type CarType {
  id: ID!
  convenience_fees: Int
  image: String
  name: String
  rate_per_hour: Int
  rate_per_kilometer: String
  updatedAt: DateTime!
}

type CarTypeConnection {
  pageInfo: PageInfo!
  edges: [CarTypeEdge]!
  aggregate: AggregateCarType!
}

input CarTypeCreateInput {
  id: ID
  convenience_fees: Int
  image: String
  name: String
  rate_per_hour: Int
  rate_per_kilometer: String
}

type CarTypeEdge {
  node: CarType!
  cursor: String!
}

enum CarTypeOrderByInput {
  id_ASC
  id_DESC
  convenience_fees_ASC
  convenience_fees_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
  rate_per_hour_ASC
  rate_per_hour_DESC
  rate_per_kilometer_ASC
  rate_per_kilometer_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CarTypePreviousValues {
  id: ID!
  convenience_fees: Int
  image: String
  name: String
  rate_per_hour: Int
  rate_per_kilometer: String
  updatedAt: DateTime!
}

type CarTypeSubscriptionPayload {
  mutation: MutationType!
  node: CarType
  updatedFields: [String!]
  previousValues: CarTypePreviousValues
}

input CarTypeSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CarTypeWhereInput
  AND: [CarTypeSubscriptionWhereInput!]
  OR: [CarTypeSubscriptionWhereInput!]
  NOT: [CarTypeSubscriptionWhereInput!]
}

input CarTypeUpdateInput {
  convenience_fees: Int
  image: String
  name: String
  rate_per_hour: Int
  rate_per_kilometer: String
}

input CarTypeUpdateManyMutationInput {
  convenience_fees: Int
  image: String
  name: String
  rate_per_hour: Int
  rate_per_kilometer: String
}

input CarTypeWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  convenience_fees: Int
  convenience_fees_not: Int
  convenience_fees_in: [Int!]
  convenience_fees_not_in: [Int!]
  convenience_fees_lt: Int
  convenience_fees_lte: Int
  convenience_fees_gt: Int
  convenience_fees_gte: Int
  image: String
  image_not: String
  image_in: [String!]
  image_not_in: [String!]
  image_lt: String
  image_lte: String
  image_gt: String
  image_gte: String
  image_contains: String
  image_not_contains: String
  image_starts_with: String
  image_not_starts_with: String
  image_ends_with: String
  image_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  rate_per_hour: Int
  rate_per_hour_not: Int
  rate_per_hour_in: [Int!]
  rate_per_hour_not_in: [Int!]
  rate_per_hour_lt: Int
  rate_per_hour_lte: Int
  rate_per_hour_gt: Int
  rate_per_hour_gte: Int
  rate_per_kilometer: String
  rate_per_kilometer_not: String
  rate_per_kilometer_in: [String!]
  rate_per_kilometer_not_in: [String!]
  rate_per_kilometer_lt: String
  rate_per_kilometer_lte: String
  rate_per_kilometer_gt: String
  rate_per_kilometer_gte: String
  rate_per_kilometer_contains: String
  rate_per_kilometer_not_contains: String
  rate_per_kilometer_starts_with: String
  rate_per_kilometer_not_starts_with: String
  rate_per_kilometer_ends_with: String
  rate_per_kilometer_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [CarTypeWhereInput!]
  OR: [CarTypeWhereInput!]
  NOT: [CarTypeWhereInput!]
}

input CarTypeWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Long

type Mutation {
  createCancelReason(data: CancelReasonCreateInput!): CancelReason!
  updateCancelReason(data: CancelReasonUpdateInput!, where: CancelReasonWhereUniqueInput!): CancelReason
  updateManyCancelReasons(data: CancelReasonUpdateManyMutationInput!, where: CancelReasonWhereInput): BatchPayload!
  upsertCancelReason(where: CancelReasonWhereUniqueInput!, create: CancelReasonCreateInput!, update: CancelReasonUpdateInput!): CancelReason!
  deleteCancelReason(where: CancelReasonWhereUniqueInput!): CancelReason
  deleteManyCancelReasons(where: CancelReasonWhereInput): BatchPayload!
  createCarType(data: CarTypeCreateInput!): CarType!
  updateCarType(data: CarTypeUpdateInput!, where: CarTypeWhereUniqueInput!): CarType
  updateManyCarTypes(data: CarTypeUpdateManyMutationInput!, where: CarTypeWhereInput): BatchPayload!
  upsertCarType(where: CarTypeWhereUniqueInput!, create: CarTypeCreateInput!, update: CarTypeUpdateInput!): CarType!
  deleteCarType(where: CarTypeWhereUniqueInput!): CarType
  deleteManyCarTypes(where: CarTypeWhereInput): BatchPayload!
  createOffer(data: OfferCreateInput!): Offer!
  updateOffer(data: OfferUpdateInput!, where: OfferWhereUniqueInput!): Offer
  updateManyOffers(data: OfferUpdateManyMutationInput!, where: OfferWhereInput): BatchPayload!
  upsertOffer(where: OfferWhereUniqueInput!, create: OfferCreateInput!, update: OfferUpdateInput!): Offer!
  deleteOffer(where: OfferWhereUniqueInput!): Offer
  deleteManyOffers(where: OfferWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type Offer {
  id: ID!
  max_promo_discount_value: Int
  min_order: Int
  promo_description: String
  promo_discount_type: String
  promo_discount_value: Int
  promo_name: String
  promo_start: String
  promo_usage_limit: Int
  promo_validity: String
}

type OfferConnection {
  pageInfo: PageInfo!
  edges: [OfferEdge]!
  aggregate: AggregateOffer!
}

input OfferCreateInput {
  id: ID
  max_promo_discount_value: Int
  min_order: Int
  promo_description: String
  promo_discount_type: String
  promo_discount_value: Int
  promo_name: String
  promo_start: String
  promo_usage_limit: Int
  promo_validity: String
}

type OfferEdge {
  node: Offer!
  cursor: String!
}

enum OfferOrderByInput {
  id_ASC
  id_DESC
  max_promo_discount_value_ASC
  max_promo_discount_value_DESC
  min_order_ASC
  min_order_DESC
  promo_description_ASC
  promo_description_DESC
  promo_discount_type_ASC
  promo_discount_type_DESC
  promo_discount_value_ASC
  promo_discount_value_DESC
  promo_name_ASC
  promo_name_DESC
  promo_start_ASC
  promo_start_DESC
  promo_usage_limit_ASC
  promo_usage_limit_DESC
  promo_validity_ASC
  promo_validity_DESC
}

type OfferPreviousValues {
  id: ID!
  max_promo_discount_value: Int
  min_order: Int
  promo_description: String
  promo_discount_type: String
  promo_discount_value: Int
  promo_name: String
  promo_start: String
  promo_usage_limit: Int
  promo_validity: String
}

type OfferSubscriptionPayload {
  mutation: MutationType!
  node: Offer
  updatedFields: [String!]
  previousValues: OfferPreviousValues
}

input OfferSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: OfferWhereInput
  AND: [OfferSubscriptionWhereInput!]
  OR: [OfferSubscriptionWhereInput!]
  NOT: [OfferSubscriptionWhereInput!]
}

input OfferUpdateInput {
  max_promo_discount_value: Int
  min_order: Int
  promo_description: String
  promo_discount_type: String
  promo_discount_value: Int
  promo_name: String
  promo_start: String
  promo_usage_limit: Int
  promo_validity: String
}

input OfferUpdateManyMutationInput {
  max_promo_discount_value: Int
  min_order: Int
  promo_description: String
  promo_discount_type: String
  promo_discount_value: Int
  promo_name: String
  promo_start: String
  promo_usage_limit: Int
  promo_validity: String
}

input OfferWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  max_promo_discount_value: Int
  max_promo_discount_value_not: Int
  max_promo_discount_value_in: [Int!]
  max_promo_discount_value_not_in: [Int!]
  max_promo_discount_value_lt: Int
  max_promo_discount_value_lte: Int
  max_promo_discount_value_gt: Int
  max_promo_discount_value_gte: Int
  min_order: Int
  min_order_not: Int
  min_order_in: [Int!]
  min_order_not_in: [Int!]
  min_order_lt: Int
  min_order_lte: Int
  min_order_gt: Int
  min_order_gte: Int
  promo_description: String
  promo_description_not: String
  promo_description_in: [String!]
  promo_description_not_in: [String!]
  promo_description_lt: String
  promo_description_lte: String
  promo_description_gt: String
  promo_description_gte: String
  promo_description_contains: String
  promo_description_not_contains: String
  promo_description_starts_with: String
  promo_description_not_starts_with: String
  promo_description_ends_with: String
  promo_description_not_ends_with: String
  promo_discount_type: String
  promo_discount_type_not: String
  promo_discount_type_in: [String!]
  promo_discount_type_not_in: [String!]
  promo_discount_type_lt: String
  promo_discount_type_lte: String
  promo_discount_type_gt: String
  promo_discount_type_gte: String
  promo_discount_type_contains: String
  promo_discount_type_not_contains: String
  promo_discount_type_starts_with: String
  promo_discount_type_not_starts_with: String
  promo_discount_type_ends_with: String
  promo_discount_type_not_ends_with: String
  promo_discount_value: Int
  promo_discount_value_not: Int
  promo_discount_value_in: [Int!]
  promo_discount_value_not_in: [Int!]
  promo_discount_value_lt: Int
  promo_discount_value_lte: Int
  promo_discount_value_gt: Int
  promo_discount_value_gte: Int
  promo_name: String
  promo_name_not: String
  promo_name_in: [String!]
  promo_name_not_in: [String!]
  promo_name_lt: String
  promo_name_lte: String
  promo_name_gt: String
  promo_name_gte: String
  promo_name_contains: String
  promo_name_not_contains: String
  promo_name_starts_with: String
  promo_name_not_starts_with: String
  promo_name_ends_with: String
  promo_name_not_ends_with: String
  promo_start: String
  promo_start_not: String
  promo_start_in: [String!]
  promo_start_not_in: [String!]
  promo_start_lt: String
  promo_start_lte: String
  promo_start_gt: String
  promo_start_gte: String
  promo_start_contains: String
  promo_start_not_contains: String
  promo_start_starts_with: String
  promo_start_not_starts_with: String
  promo_start_ends_with: String
  promo_start_not_ends_with: String
  promo_usage_limit: Int
  promo_usage_limit_not: Int
  promo_usage_limit_in: [Int!]
  promo_usage_limit_not_in: [Int!]
  promo_usage_limit_lt: Int
  promo_usage_limit_lte: Int
  promo_usage_limit_gt: Int
  promo_usage_limit_gte: Int
  promo_validity: String
  promo_validity_not: String
  promo_validity_in: [String!]
  promo_validity_not_in: [String!]
  promo_validity_lt: String
  promo_validity_lte: String
  promo_validity_gt: String
  promo_validity_gte: String
  promo_validity_contains: String
  promo_validity_not_contains: String
  promo_validity_starts_with: String
  promo_validity_not_starts_with: String
  promo_validity_ends_with: String
  promo_validity_not_ends_with: String
  AND: [OfferWhereInput!]
  OR: [OfferWhereInput!]
  NOT: [OfferWhereInput!]
}

input OfferWhereUniqueInput {
  id: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  cancelReason(where: CancelReasonWhereUniqueInput!): CancelReason
  cancelReasons(where: CancelReasonWhereInput, orderBy: CancelReasonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CancelReason]!
  cancelReasonsConnection(where: CancelReasonWhereInput, orderBy: CancelReasonOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CancelReasonConnection!
  carType(where: CarTypeWhereUniqueInput!): CarType
  carTypes(where: CarTypeWhereInput, orderBy: CarTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [CarType]!
  carTypesConnection(where: CarTypeWhereInput, orderBy: CarTypeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CarTypeConnection!
  offer(where: OfferWhereUniqueInput!): Offer
  offers(where: OfferWhereInput, orderBy: OfferOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Offer]!
  offersConnection(where: OfferWhereInput, orderBy: OfferOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): OfferConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  node(id: ID!): Node
}

type Subscription {
  cancelReason(where: CancelReasonSubscriptionWhereInput): CancelReasonSubscriptionPayload
  carType(where: CarTypeSubscriptionWhereInput): CarTypeSubscriptionPayload
  offer(where: OfferSubscriptionWhereInput): OfferSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type User {
  id: ID!
  name: String!
  email: String!
  createdAt: DateTime!
  description: String
  password: String!
  usertype: String
  isAdmin: Boolean
  lastName: String
  firstName: String
  updatedAt: DateTime
  mobile: String
  profile_image: String
  approved: Boolean
  refferalBonus: String
  profession: String
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  name: String!
  email: String!
  description: String
  password: String!
  usertype: String
  isAdmin: Boolean
  lastName: String
  firstName: String
  mobile: String
  profile_image: String
  approved: Boolean
  refferalBonus: String
  profession: String
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  email_ASC
  email_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  password_ASC
  password_DESC
  usertype_ASC
  usertype_DESC
  isAdmin_ASC
  isAdmin_DESC
  lastName_ASC
  lastName_DESC
  firstName_ASC
  firstName_DESC
  updatedAt_ASC
  updatedAt_DESC
  mobile_ASC
  mobile_DESC
  profile_image_ASC
  profile_image_DESC
  approved_ASC
  approved_DESC
  refferalBonus_ASC
  refferalBonus_DESC
  profession_ASC
  profession_DESC
}

type UserPreviousValues {
  id: ID!
  name: String!
  email: String!
  createdAt: DateTime!
  description: String
  password: String!
  usertype: String
  isAdmin: Boolean
  lastName: String
  firstName: String
  updatedAt: DateTime
  mobile: String
  profile_image: String
  approved: Boolean
  refferalBonus: String
  profession: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateInput {
  name: String
  email: String
  description: String
  password: String
  usertype: String
  isAdmin: Boolean
  lastName: String
  firstName: String
  mobile: String
  profile_image: String
  approved: Boolean
  refferalBonus: String
  profession: String
}

input UserUpdateManyMutationInput {
  name: String
  email: String
  description: String
  password: String
  usertype: String
  isAdmin: Boolean
  lastName: String
  firstName: String
  mobile: String
  profile_image: String
  approved: Boolean
  refferalBonus: String
  profession: String
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  password: String
  password_not: String
  password_in: [String!]
  password_not_in: [String!]
  password_lt: String
  password_lte: String
  password_gt: String
  password_gte: String
  password_contains: String
  password_not_contains: String
  password_starts_with: String
  password_not_starts_with: String
  password_ends_with: String
  password_not_ends_with: String
  usertype: String
  usertype_not: String
  usertype_in: [String!]
  usertype_not_in: [String!]
  usertype_lt: String
  usertype_lte: String
  usertype_gt: String
  usertype_gte: String
  usertype_contains: String
  usertype_not_contains: String
  usertype_starts_with: String
  usertype_not_starts_with: String
  usertype_ends_with: String
  usertype_not_ends_with: String
  isAdmin: Boolean
  isAdmin_not: Boolean
  lastName: String
  lastName_not: String
  lastName_in: [String!]
  lastName_not_in: [String!]
  lastName_lt: String
  lastName_lte: String
  lastName_gt: String
  lastName_gte: String
  lastName_contains: String
  lastName_not_contains: String
  lastName_starts_with: String
  lastName_not_starts_with: String
  lastName_ends_with: String
  lastName_not_ends_with: String
  firstName: String
  firstName_not: String
  firstName_in: [String!]
  firstName_not_in: [String!]
  firstName_lt: String
  firstName_lte: String
  firstName_gt: String
  firstName_gte: String
  firstName_contains: String
  firstName_not_contains: String
  firstName_starts_with: String
  firstName_not_starts_with: String
  firstName_ends_with: String
  firstName_not_ends_with: String
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  mobile: String
  mobile_not: String
  mobile_in: [String!]
  mobile_not_in: [String!]
  mobile_lt: String
  mobile_lte: String
  mobile_gt: String
  mobile_gte: String
  mobile_contains: String
  mobile_not_contains: String
  mobile_starts_with: String
  mobile_not_starts_with: String
  mobile_ends_with: String
  mobile_not_ends_with: String
  profile_image: String
  profile_image_not: String
  profile_image_in: [String!]
  profile_image_not_in: [String!]
  profile_image_lt: String
  profile_image_lte: String
  profile_image_gt: String
  profile_image_gte: String
  profile_image_contains: String
  profile_image_not_contains: String
  profile_image_starts_with: String
  profile_image_not_starts_with: String
  profile_image_ends_with: String
  profile_image_not_ends_with: String
  approved: Boolean
  approved_not: Boolean
  refferalBonus: String
  refferalBonus_not: String
  refferalBonus_in: [String!]
  refferalBonus_not_in: [String!]
  refferalBonus_lt: String
  refferalBonus_lte: String
  refferalBonus_gt: String
  refferalBonus_gte: String
  refferalBonus_contains: String
  refferalBonus_not_contains: String
  refferalBonus_starts_with: String
  refferalBonus_not_starts_with: String
  refferalBonus_ends_with: String
  refferalBonus_not_ends_with: String
  profession: String
  profession_not: String
  profession_in: [String!]
  profession_not_in: [String!]
  profession_lt: String
  profession_lte: String
  profession_gt: String
  profession_gte: String
  profession_contains: String
  profession_not_contains: String
  profession_starts_with: String
  profession_not_starts_with: String
  profession_ends_with: String
  profession_not_ends_with: String
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
`
      }
    